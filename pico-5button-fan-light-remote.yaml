blueprint:
  name: Pico Fan Simple 5-Button for Inovelli v1.1
  description: >
    # 🎛️ Lutron Pico Fan & Light Control for Inovelli
    
    **Version: 1.1**
    
    Control Inovelli ceiling fans and lights with a Lutron Pico 5-button remote.
    
    <details>
    <summary><b>Features:</b> - Click here to expand</summary>

      - ON button cycles fan speeds (Off→Low→Med→High→Low...)
      - OFF button turns fan completely off
      - UP/DOWN buttons control light brightness
      - Middle button toggles light
      - Simple single-press actions only
      - Works with Inovelli White Matter Thread fan modules

    </details>
    
    <details>
    <summary><b>Button Layout:</b> - Click here to expand</summary>

      **Button Actions:**
      - ON: Cycle fan speeds (Low→Med→High→Low...)
      - OFF: Turn fan off
      - UP: Increase light brightness
      - DOWN: Decrease light brightness  
      - MIDDLE: Toggle light on/off

    </details>
    
    <details>
    <summary><b>Setup Help:</b> - Click here to expand</summary>

      **Prerequisites:**
      1. Lutron Caseta integration installed and configured
      2. Pico remote (PJ2-3BRL-GXX-F01) paired with Caseta hub
      3. Inovelli fan entity available in Home Assistant
      4. Inovelli light entity available in Home Assistant
      
      **Configuration Tips:**
      - Brightness Step: How much to change brightness per button press (default: 20%)
      - Fan speeds: Low=33%, Medium=66%, High=100%
      
      **Example Dashboard Card:**
      ```yaml
      type: vertical-stack
      cards:
        - type: tile
          entity: fan.bedroom_fan
          features:
            - type: fan-speed
        - type: light
          entity: light.bedroom_fan_light
      ```

    </details>
  domain: automation
  author: billchurch (modified for Inovelli)
  input:
    pico_remote:
      name: Lutron Pico
      selector:
        device:
          model: PJ2-3BRL-GXX-F01 (Pico3ButtonRaiseLower)
    fan_entity:
      name: Fan
      selector:
        entity:
          domain: fan
    light_entity:
      name: Light
      selector:
        entity:
          domain: light
          multiple: false
    brightness_step:
      name: Brightness Step Percentage
      description: How much to change brightness on each button press
      default: 20
      selector:
        number:
          min: 5
          max: 50
          unit_of_measurement: "%"

trigger:
  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'on'
    id: 'on'

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: raise
    id: 'up'

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: stop
    id: 'middle'

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: lower
    id: 'down'

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'off'
    id: 'off'

variables:
  fan: !input fan_entity
  light: !input light_entity
  step_pct: !input brightness_step

action:
  - choose:
    ################################################
    # ON BUTTON - Cycle Fan Speeds
    ################################################
    - conditions:
        - condition: trigger
          id: 'on'
      sequence:
        - choose:
            # Fan is OFF - turn on to low speed
            - conditions:
                - condition: state
                  entity_id: !input fan_entity
                  state: 'off'
              sequence:
                - service: fan.set_percentage
                  target:
                    entity_id: !input fan_entity
                  data:
                    percentage: 33
            
            # Fan is at low speed (33%) - go to medium
            - conditions:
                - condition: template
                  value_template: >
                    {{ state_attr(fan, 'percentage') | int <= 40 }}
              sequence:
                - service: fan.set_percentage
                  target:
                    entity_id: !input fan_entity
                  data:
                    percentage: 66
            
            # Fan is at medium speed (66%) - go to high
            - conditions:
                - condition: template
                  value_template: >
                    {{ state_attr(fan, 'percentage') | int <= 80 }}
              sequence:
                - service: fan.set_percentage
                  target:
                    entity_id: !input fan_entity
                  data:
                    percentage: 100
            
            # Fan is at high speed (100%) - go back to low
          default:
            - service: fan.set_percentage
              target:
                entity_id: !input fan_entity
              data:
                percentage: 33

    ################################################
    # UP BUTTON - Increase Light Brightness
    ################################################
    - conditions:
        - condition: trigger
          id: 'up'
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input light_entity
          data:
            brightness_step_pct: "{{ step_pct }}"

    ################################################
    # MIDDLE BUTTON - Toggle Light
    ################################################
    - conditions:
        - condition: trigger
          id: 'middle'
      sequence:
        - service: light.toggle
          target:
            entity_id: !input light_entity

    ################################################
    # DOWN BUTTON - Decrease Light Brightness
    ################################################
    - conditions:
        - condition: trigger
          id: 'down'
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input light_entity
          data:
            brightness_step_pct: "{{ 0 - step_pct }}"

    ################################################
    # OFF BUTTON - Turn Fan Off
    ################################################
    - conditions:
        - condition: trigger
          id: 'off'
      sequence:
        - service: fan.turn_off
          target:
            entity_id: !input fan_entity

mode: single